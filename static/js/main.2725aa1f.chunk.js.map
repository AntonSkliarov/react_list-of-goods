{"version":3,"sources":["components/SortingButtons.jsx","components/SelectLengthButton.jsx","components/ResetButton.jsx","components/GoodsList.jsx","components/Content.jsx","components/StartButton.jsx","App.js","index.js"],"names":["SortingButtons","reverseList","sortByAlphabet","sortByLength","type","onClick","className","value","SelectLengthButton","nextProps","lengthSortingLimit","this","props","selectLengthSorting","onChange","React","Component","ResetButton","resetSorting","GoodsList","visibleList","map","item","key","id","name","Content","state","goodsList","setState","reverse","sort","item1","item2","localeCompare","length","event","target","Number","filter","StartButton","showGoodsList","preparedGoodsList","index","App","listVisible","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2725aa1f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function SortingButtons({ reverseList, sortByAlphabet, sortByLength }) {\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={reverseList}\n        className=\"ui secondary button\"\n      >\n        Reverse\n      </button>\n\n      <button\n        value=\"alphabet\"\n        type=\"button\"\n        onClick={sortByAlphabet}\n        className=\"ui secondary button\"\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        value=\"length\"\n        type=\"button\"\n        onClick={sortByLength}\n        className=\"ui secondary button\"\n      >\n        Sort by length\n      </button>\n    </>\n  );\n}\n\nSortingButtons.propTypes = {\n  reverseList: PropTypes.func.isRequired,\n  sortByAlphabet: PropTypes.func.isRequired,\n  sortByLength: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class SelectLengthButton extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return nextProps.lengthSortingLimit !== this.props.lengthSortingLimit;\n  }\n\n  render() {\n    const { selectLengthSorting, lengthSortingLimit } = this.props;\n\n    return (\n      <select\n        value={lengthSortingLimit}\n        onChange={selectLengthSorting}\n        className=\"ui dropdown\"\n      >\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n        <option value=\"6\">6</option>\n        <option value=\"7\">7</option>\n        <option value=\"8\">8</option>\n        <option value=\"9\">9</option>\n        <option value=\"10\">10</option>\n      </select>\n    );\n  }\n}\n\nSelectLengthButton.propTypes = {\n  lengthSortingLimit: PropTypes.string.isRequired,\n  selectLengthSorting: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function ResetButton({ resetSorting }) {\n  return (\n    <button\n      type=\"button\"\n      onClick={resetSorting}\n      className=\"ui red inverted button\"\n    >\n      Reset\n    </button>\n  );\n}\n\nResetButton.propTypes = {\n  resetSorting: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function GoodsList({ visibleList }) {\n  return (\n    <ul className=\"goods-list\">\n      {visibleList.map(item => (\n        <li className=\"list-item\" key={item.id}>\n          {item.name}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nGoodsList.propTypes = {\n  visibleList: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SortingButtons } from './SortingButtons';\nimport { SelectLengthButton } from './SelectLengthButton';\nimport { ResetButton } from './ResetButton';\nimport { GoodsList } from './GoodsList';\n\nexport class Content extends React.Component {\n  state = {\n    visibleList: this.props.goodsList,\n    lengthSortingLimit: 1,\n  }\n\n  reverseList = () => {\n    this.setState(state => ({\n      visibleList: [...state.visibleList].reverse(),\n    }));\n  }\n\n  sortByAlphabet = () => {\n    this.setState(state => ({\n      visibleList: [...state.visibleList].sort((item1, item2) => (\n        item1.name.localeCompare(item2.name))),\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      visibleList: [...state.visibleList].sort((item1, item2) => (\n        item1.name.length - item2.name.length)),\n    }));\n  }\n\n  selectLengthSorting = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      lengthSortingLimit: Number(value),\n      visibleList: this.props.goodsList.filter(\n        item => item.name.length >= value,\n      ),\n    });\n  }\n\n  resetSorting = () => {\n    this.setState({\n      visibleList: this.props.goodsList,\n    });\n  }\n\n  render() {\n    const { visibleList, lengthSortingLimit } = this.state;\n\n    return (\n      <>\n        <SortingButtons\n          reverseList={this.reverseList}\n          sortByAlphabet={this.sortByAlphabet}\n          sortByLength={this.sortByLength}\n        />\n\n        <SelectLengthButton\n          selectLengthSorting={this.selectLengthSorting}\n          lengthSortingLimit={lengthSortingLimit}\n        />\n\n        <ResetButton resetSorting={this.resetSorting} />\n\n        <GoodsList visibleList={visibleList} />\n      </>\n    );\n  }\n}\n\nContent.propTypes = {\n  goodsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function StartButton({ showGoodsList }) {\n  return (\n    <button\n      type=\"button\"\n      onClick={showGoodsList}\n      className=\"ui primary button\"\n    >\n      Start\n    </button>\n  );\n}\n\nStartButton.propTypes = {\n  showGoodsList: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Content } from './components/Content';\nimport { StartButton } from './components/StartButton';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoodsList = goodsFromServer.map((item, index) => ({\n  name: item,\n  id: index,\n}));\n\nclass App extends React.Component {\n  state = {\n    listVisible: false,\n  }\n\n  showGoodsList = () => {\n    this.setState(state => ({\n      listVisible: !state.listVisible,\n    }));\n  }\n\n  render() {\n    const {\n      listVisible,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {!listVisible\n          ? <StartButton showGoodsList={this.showGoodsList} />\n          : <Content goodsList={preparedGoodsList} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}